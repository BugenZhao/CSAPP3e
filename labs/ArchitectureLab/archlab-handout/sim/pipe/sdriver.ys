#######################################################################
# Test for copying block of size 4;
#######################################################################
	.pos 0
main:	irmovq Stack, %rsp  	# Set up stack pointer

	# Set up arguments for copy function and then invoke it
	irmovq $4, %rdx		# src and dst have 4 elements
	irmovq dest, %rsi	# dst array
	irmovq src, %rdi	# src array
	call ncopy		 
	halt			# should halt with num nonzeros in %rax
StartFun:
#/* $begin ncopy-ys */
##################################################################
# ncopy.ys - Copy a src block of len words to dst.
# Return the number of positive words (>0) contained in src.
#
# Include your name and ID here.
#
# Describe how and why you modified the baseline code.
#
##################################################################
# Do not modify this portion
# Function prologue.
# %rdi = src, %rsi = dst, %rdx = len
ncopy:

##################################################################
# You can modify this portion

#	xorq 	%rax, %rax		# count = 0;
	iaddq	$-3, %rdx
	jg		loop0			# len >= 2
test_rest:
	iaddq	$3, %rdx
	jg		rest0
	ret
rest0:
	mrmovq	(%rdi), %r8
	mrmovq	8(%rdi), %r9
	rmmovq	%r8, (%rsi)
	andq	%r8, %r8
	jle		rest0_t
	iaddq	$1, %rax
rest0_t:
	iaddq	$-1, %rdx
	jg		rest1
	ret
rest1:
	mrmovq	16(%rdi), %r10
	rmmovq	%r9, 8(%rsi)
	andq	%r9, %r9
	jle		rest1_t
	iaddq	$1, %rax
rest1_t:
	iaddq	$-1, %rdx
	jg 		rest2
	ret
rest2:
	rmmovq	%r10, 16(%rsi)
	andq	%r10, %r10
	jle		Done
	iaddq	$1, %rax
	ret


loop0:
	mrmovq	(%rdi), %r8
	iaddq	$32, %rdi
	rmmovq	%r8, (%rsi)
	andq	%r8, %r8
	jle		loop1
	iaddq	$1, %rax
loop1:
	mrmovq	-24(%rdi), %r8
	iaddq	$32, %rsi
	rmmovq	%r8, -24(%rsi)
	andq	%r8, %r8
	jle 	loop2
	iaddq	$1, %rax
loop2:
	mrmovq	-16(%rdi), %r8
	mrmovq	-8(%rdi), %r9
	rmmovq	%r8, -16(%rsi)
	andq	%r8, %r8
	jle 	loop3
	iaddq	$1, %rax
loop3:
	rmmovq	%r9, -8(%rsi)
	andq	%r9, %r9
	jle		loop_end
	iaddq	$1, %rax

loop_end:
	iaddq	$-4, %rdx
	jg		loop0
	jmp		test_rest


##################################################################
# Do not modify the following section of code
# Function epilogue.
Done:
	ret
##################################################################
# Keep the following label at the end of your function
End:
#/* $end ncopy-ys */
EndFun:

###############################
# Source and destination blocks 
###############################
	.align 8
src:
	.quad -1
	.quad -2
	.quad 3
	.quad 4
	.quad 0xbcdefa # This shouldn't get moved

	.align 16
Predest:
	.quad 0xbcdefa
dest:
	.quad 0xcdefab
	.quad 0xcdefab
	.quad 0xcdefab
	.quad 0xcdefab
Postdest:
	.quad 0xdefabc

.align 8
# Run time stack
	.quad 0
	.quad 0
	.quad 0
	.quad 0
	.quad 0
	.quad 0
	.quad 0
	.quad 0
	.quad 0
	.quad 0
	.quad 0
	.quad 0
	.quad 0
	.quad 0
	.quad 0
	.quad 0

Stack:
