                            | #######################################################################
                            | # Test for copying block of size 63;
                            | #######################################################################
0x000:                      | 	.pos 0
0x000: 30f43808000000000000 | main:	irmovq Stack, %rsp  	# Set up stack pointer
                            | 
                            | 	# Set up arguments for copy function and then invoke it
0x00a: 30f23f00000000000000 | 	irmovq $63, %rdx		# src and dst have 63 elements
0x014: 30f6b805000000000000 | 	irmovq dest, %rsi	# dst array
0x01e: 30f7b003000000000000 | 	irmovq src, %rdi	# src array
0x028: 803200000000000000   | 	call ncopy		 
0x031: 00                   | 	halt			# should halt with num nonzeros in %rax
0x032:                      | StartFun:
                            | #/* $begin ncopy-ys */
                            | ##################################################################
                            | # ncopy.ys - Copy a src block of len words to dst.
                            | # Return the number of positive words (>0) contained in src.
                            | #
                            | # Include your name and ID here.
                            | #
                            | # Describe how and why you modified the baseline code.
                            | #
                            | ##################################################################
                            | # Do not modify this portion
                            | # Function prologue.
                            | # %rdi = src, %rsi = dst, %rdx = len
0x032:                      | ncopy:
                            | 
                            | ##################################################################
                            | # You can modify this portion
                            | 
                            | #	xorq 	%rax, %rax		# count = 0;
0x032: c0f2f8ffffffffffffff | 	iaddq	$-8, %rdx
0x03c: 71dd01000000000000   | 	jle		r_test			# len >= 9
                            | 
                            | 
0x045:                      | loop0:
0x045: 50870000000000000000 | 	mrmovq	(%rdi), %r8
0x04f: 50970800000000000000 | 	mrmovq	8(%rdi), %r9
0x059: 40860000000000000000 | 	rmmovq	%r8, (%rsi)
0x063: 6288                 | 	andq	%r8, %r8
0x065: 717800000000000000   | 	jle		loop1
0x06e: c0f00100000000000000 | 	iaddq	$1, %rax
0x078:                      | loop1:
0x078: 50871000000000000000 | 	mrmovq	16(%rdi), %r8
0x082: 40960800000000000000 | 	rmmovq	%r9, 8(%rsi)
0x08c: 6299                 | 	andq	%r9, %r9
0x08e: 71a100000000000000   | 	jle 	loop2
0x097: c0f00100000000000000 | 	iaddq	$1, %rax
0x0a1:                      | loop2:
0x0a1: 50971800000000000000 | 	mrmovq	24(%rdi), %r9
0x0ab: 40861000000000000000 | 	rmmovq	%r8, 16(%rsi)
0x0b5: 6288                 | 	andq	%r8, %r8
0x0b7: 71ca00000000000000   | 	jle 	loop3
0x0c0: c0f00100000000000000 | 	iaddq	$1, %rax
0x0ca:                      | loop3:
0x0ca: 50872000000000000000 | 	mrmovq	32(%rdi), %r8
0x0d4: 40961800000000000000 | 	rmmovq	%r9, 24(%rsi)
0x0de: 6299                 | 	andq	%r9, %r9
0x0e0: 71f300000000000000   | 	jle 	loop4
0x0e9: c0f00100000000000000 | 	iaddq	$1, %rax
0x0f3:                      | loop4:
0x0f3: 50972800000000000000 | 	mrmovq	40(%rdi), %r9
0x0fd: 40862000000000000000 | 	rmmovq	%r8, 32(%rsi)
0x107: 6288                 | 	andq	%r8, %r8
0x109: 711c01000000000000   | 	jle 	loop5
0x112: c0f00100000000000000 | 	iaddq	$1, %rax
0x11c:                      | loop5:
0x11c: 50873000000000000000 | 	mrmovq	48(%rdi), %r8
0x126: 40962800000000000000 | 	rmmovq	%r9, 40(%rsi)
0x130: 6299                 | 	andq	%r9, %r9
0x132: 714501000000000000   | 	jle 	loop6
0x13b: c0f00100000000000000 | 	iaddq	$1, %rax
0x145:                      | loop6:
0x145: 50973800000000000000 | 	mrmovq	56(%rdi), %r9
0x14f: 40863000000000000000 | 	rmmovq	%r8, 48(%rsi)
0x159: 6288                 | 	andq	%r8, %r8
0x15b: 716e01000000000000   | 	jle 	loop7
0x164: c0f00100000000000000 | 	iaddq	$1, %rax
0x16e:                      | loop7:
0x16e: 50874000000000000000 | 	mrmovq	64(%rdi), %r8
0x178: 40963800000000000000 | 	rmmovq	%r9, 56(%rsi)
0x182: 6299                 | 	andq	%r9, %r9
0x184: 719701000000000000   | 	jle 	loop8
0x18d: c0f00100000000000000 | 	iaddq	$1, %rax
0x197:                      | loop8:
0x197: 40864000000000000000 | 	rmmovq	%r8, 64(%rsi)
0x1a1: 6288                 | 	andq	%r8, %r8
0x1a3: 71b601000000000000   | 	jle		loop_end
0x1ac: c0f00100000000000000 | 	iaddq	$1, %rax
                            | 
0x1b6:                      | loop_end:
0x1b6: c0f74800000000000000 | 	iaddq	$72, %rdi
0x1c0: c0f64800000000000000 | 	iaddq	$72, %rsi
0x1ca: c0f2f7ffffffffffffff | 	iaddq	$-9, %rdx
0x1d4: 764500000000000000   | 	jg		loop0
                            | 
                            | 
                            | 
0x1dd:                      | r_test:
0x1dd: c0f20400000000000000 | 	iaddq	$4, %rdx		# [-8,0] -> [-4,4]	(+4)
0x1e7: 720202000000000000   | 	jl		r_test_l
0x1f0: 763202000000000000   | 	jg		r_test_r
0x1f9: 70f002000000000000   | 	jmp		r4
                            | 
0x202:                      | r_test_l:
0x202: c0f20200000000000000 | 	iaddq	$2, %rdx		# [-4,-1] -> [-2,1]	(+2)
0x20c: 734203000000000000   | 	je		r2
0x215: 761903000000000000   | 	jg		r3
0x21e: c0f20200000000000000 | 	iaddq	$2, %rdx		# [-2,-1] -> [0,1]	(+0)
0x228: 766b03000000000000   | 	jg		r1
0x231: 90                   | 	ret
                            | 
0x232:                      | r_test_r:
0x232: c0f2feffffffffffffff | 	iaddq	$-2, %rdx		# [1,4] -> [-1,2]	(+6)
0x23c: 72c702000000000000   | 	jl		r5
0x245: 739e02000000000000   | 	je		r6
0x24e: c0f2feffffffffffffff | 	iaddq	$-2, %rdx		# [1,2] -> [-1,0]	(+8)
0x258: 727502000000000000   | 	jl		r7
                            | 
0x261:                      | r8:
0x261: 50a73800000000000000 | 	mrmovq	56(%rdi), %r10
0x26b:                      | r8b:
0x26b: 40a63800000000000000 | 	rmmovq	%r10, 56(%rsi)
0x275:                      | r7:
                            | 	# %r10 was never used before. Directly jumping to r7 means %r10 = 0.
0x275: 62aa                 | 	andq	%r10, %r10
0x277: 50a73000000000000000 | 	mrmovq	48(%rdi), %r10
0x281: 719402000000000000   | 	jle		r7b				# 56(%rdi)
0x28a: c0f00100000000000000 | 	iaddq	$1, %rax
0x294:                      | r7b:
0x294: 40a63000000000000000 | 	rmmovq	%r10, 48(%rsi)
0x29e:                      | r6:
0x29e: 62aa                 | 	andq	%r10, %r10
0x2a0: 50a72800000000000000 | 	mrmovq	40(%rdi), %r10
0x2aa: 71bd02000000000000   | 	jle		r6b
0x2b3: c0f00100000000000000 | 	iaddq	$1, %rax
0x2bd:                      | r6b:
0x2bd: 40a62800000000000000 | 	rmmovq	%r10, 40(%rsi)
0x2c7:                      | r5:
0x2c7: 62aa                 | 	andq	%r10, %r10
0x2c9: 50a72000000000000000 | 	mrmovq	32(%rdi), %r10
0x2d3: 71e602000000000000   | 	jle		r5b
0x2dc: c0f00100000000000000 | 	iaddq	$1, %rax
0x2e6:                      | r5b:
0x2e6: 40a62000000000000000 | 	rmmovq	%r10, 32(%rsi)
0x2f0:                      | r4:
0x2f0: 62aa                 | 	andq	%r10, %r10
0x2f2: 50a71800000000000000 | 	mrmovq	24(%rdi), %r10
0x2fc: 710f03000000000000   | 	jle		r4b
0x305: c0f00100000000000000 | 	iaddq	$1, %rax
0x30f:                      | r4b:
0x30f: 40a61800000000000000 | 	rmmovq	%r10, 24(%rsi)
0x319:                      | r3:
0x319: 62aa                 | 	andq	%r10, %r10
0x31b: 50a71000000000000000 | 	mrmovq	16(%rdi), %r10
0x325: 713803000000000000   | 	jle		r3b
0x32e: c0f00100000000000000 | 	iaddq	$1, %rax
0x338:                      | r3b:
0x338: 40a61000000000000000 | 	rmmovq	%r10, 16(%rsi)
0x342:                      | r2:
0x342: 62aa                 | 	andq	%r10, %r10
0x344: 50a70800000000000000 | 	mrmovq	8(%rdi), %r10
0x34e: 716103000000000000   | 	jle		r2b
0x357: c0f00100000000000000 | 	iaddq	$1, %rax
0x361:                      | r2b:
0x361: 40a60800000000000000 | 	rmmovq	%r10, 8(%rsi)
0x36b:                      | r1:
0x36b: 62aa                 | 	andq	%r10, %r10
0x36d: 50a70000000000000000 | 	mrmovq	(%rdi), %r10
0x377: 718a03000000000000   | 	jle		r1b
0x380: c0f00100000000000000 | 	iaddq	$1, %rax
0x38a:                      | r1b:
0x38a: 40a60000000000000000 | 	rmmovq	%r10, (%rsi)
0x394:                      | r1c:
0x394: 62aa                 | 	andq	%r10, %r10
0x396: 71aa03000000000000   | 	jle		Done
0x39f: c0f00100000000000000 | 	iaddq	$1, %rax
0x3a9: 90                   | 	ret
                            | 
                            | 
                            | 
                            | 
                            | ##################################################################
                            | # Do not modify the following section of code
                            | # Function epilogue.
0x3aa:                      | Done:
0x3aa: 90                   | 	ret
                            | ##################################################################
                            | # Keep the following label at the end of your function
0x3ab:                      | End:
                            | #/* $end ncopy-ys */
0x3ab:                      | EndFun:
                            | 
                            | ###############################
                            | # Source and destination blocks 
                            | ###############################
0x3b0:                      | 	.align 8
0x3b0:                      | src:
0x3b0: 0100000000000000     | 	.quad 1
0x3b8: feffffffffffffff     | 	.quad -2
0x3c0: 0300000000000000     | 	.quad 3
0x3c8: 0400000000000000     | 	.quad 4
0x3d0: 0500000000000000     | 	.quad 5
0x3d8: 0600000000000000     | 	.quad 6
0x3e0: 0700000000000000     | 	.quad 7
0x3e8: 0800000000000000     | 	.quad 8
0x3f0: 0900000000000000     | 	.quad 9
0x3f8: f6ffffffffffffff     | 	.quad -10
0x400: f5ffffffffffffff     | 	.quad -11
0x408: f4ffffffffffffff     | 	.quad -12
0x410: f3ffffffffffffff     | 	.quad -13
0x418: f2ffffffffffffff     | 	.quad -14
0x420: 0f00000000000000     | 	.quad 15
0x428: 1000000000000000     | 	.quad 16
0x430: 1100000000000000     | 	.quad 17
0x438: eeffffffffffffff     | 	.quad -18
0x440: edffffffffffffff     | 	.quad -19
0x448: ecffffffffffffff     | 	.quad -20
0x450: 1500000000000000     | 	.quad 21
0x458: 1600000000000000     | 	.quad 22
0x460: e9ffffffffffffff     | 	.quad -23
0x468: 1800000000000000     | 	.quad 24
0x470: e7ffffffffffffff     | 	.quad -25
0x478: 1a00000000000000     | 	.quad 26
0x480: e5ffffffffffffff     | 	.quad -27
0x488: 1c00000000000000     | 	.quad 28
0x490: 1d00000000000000     | 	.quad 29
0x498: e2ffffffffffffff     | 	.quad -30
0x4a0: 1f00000000000000     | 	.quad 31
0x4a8: 2000000000000000     | 	.quad 32
0x4b0: 2100000000000000     | 	.quad 33
0x4b8: 2200000000000000     | 	.quad 34
0x4c0: 2300000000000000     | 	.quad 35
0x4c8: 2400000000000000     | 	.quad 36
0x4d0: dbffffffffffffff     | 	.quad -37
0x4d8: 2600000000000000     | 	.quad 38
0x4e0: d9ffffffffffffff     | 	.quad -39
0x4e8: 2800000000000000     | 	.quad 40
0x4f0: d7ffffffffffffff     | 	.quad -41
0x4f8: 2a00000000000000     | 	.quad 42
0x500: d5ffffffffffffff     | 	.quad -43
0x508: d4ffffffffffffff     | 	.quad -44
0x510: d3ffffffffffffff     | 	.quad -45
0x518: d2ffffffffffffff     | 	.quad -46
0x520: 2f00000000000000     | 	.quad 47
0x528: 3000000000000000     | 	.quad 48
0x530: 3100000000000000     | 	.quad 49
0x538: ceffffffffffffff     | 	.quad -50
0x540: 3300000000000000     | 	.quad 51
0x548: ccffffffffffffff     | 	.quad -52
0x550: 3500000000000000     | 	.quad 53
0x558: caffffffffffffff     | 	.quad -54
0x560: c9ffffffffffffff     | 	.quad -55
0x568: c8ffffffffffffff     | 	.quad -56
0x570: c7ffffffffffffff     | 	.quad -57
0x578: c6ffffffffffffff     | 	.quad -58
0x580: c5ffffffffffffff     | 	.quad -59
0x588: c4ffffffffffffff     | 	.quad -60
0x590: c3ffffffffffffff     | 	.quad -61
0x598: c2ffffffffffffff     | 	.quad -62
0x5a0: c1ffffffffffffff     | 	.quad -63
0x5a8: fadebc0000000000     | 	.quad 0xbcdefa # This shouldn't get moved
                            | 
0x5b0:                      | 	.align 16
0x5b0:                      | Predest:
0x5b0: fadebc0000000000     | 	.quad 0xbcdefa
0x5b8:                      | dest:
0x5b8: abefcd0000000000     | 	.quad 0xcdefab
0x5c0: abefcd0000000000     | 	.quad 0xcdefab
0x5c8: abefcd0000000000     | 	.quad 0xcdefab
0x5d0: abefcd0000000000     | 	.quad 0xcdefab
0x5d8: abefcd0000000000     | 	.quad 0xcdefab
0x5e0: abefcd0000000000     | 	.quad 0xcdefab
0x5e8: abefcd0000000000     | 	.quad 0xcdefab
0x5f0: abefcd0000000000     | 	.quad 0xcdefab
0x5f8: abefcd0000000000     | 	.quad 0xcdefab
0x600: abefcd0000000000     | 	.quad 0xcdefab
0x608: abefcd0000000000     | 	.quad 0xcdefab
0x610: abefcd0000000000     | 	.quad 0xcdefab
0x618: abefcd0000000000     | 	.quad 0xcdefab
0x620: abefcd0000000000     | 	.quad 0xcdefab
0x628: abefcd0000000000     | 	.quad 0xcdefab
0x630: abefcd0000000000     | 	.quad 0xcdefab
0x638: abefcd0000000000     | 	.quad 0xcdefab
0x640: abefcd0000000000     | 	.quad 0xcdefab
0x648: abefcd0000000000     | 	.quad 0xcdefab
0x650: abefcd0000000000     | 	.quad 0xcdefab
0x658: abefcd0000000000     | 	.quad 0xcdefab
0x660: abefcd0000000000     | 	.quad 0xcdefab
0x668: abefcd0000000000     | 	.quad 0xcdefab
0x670: abefcd0000000000     | 	.quad 0xcdefab
0x678: abefcd0000000000     | 	.quad 0xcdefab
0x680: abefcd0000000000     | 	.quad 0xcdefab
0x688: abefcd0000000000     | 	.quad 0xcdefab
0x690: abefcd0000000000     | 	.quad 0xcdefab
0x698: abefcd0000000000     | 	.quad 0xcdefab
0x6a0: abefcd0000000000     | 	.quad 0xcdefab
0x6a8: abefcd0000000000     | 	.quad 0xcdefab
0x6b0: abefcd0000000000     | 	.quad 0xcdefab
0x6b8: abefcd0000000000     | 	.quad 0xcdefab
0x6c0: abefcd0000000000     | 	.quad 0xcdefab
0x6c8: abefcd0000000000     | 	.quad 0xcdefab
0x6d0: abefcd0000000000     | 	.quad 0xcdefab
0x6d8: abefcd0000000000     | 	.quad 0xcdefab
0x6e0: abefcd0000000000     | 	.quad 0xcdefab
0x6e8: abefcd0000000000     | 	.quad 0xcdefab
0x6f0: abefcd0000000000     | 	.quad 0xcdefab
0x6f8: abefcd0000000000     | 	.quad 0xcdefab
0x700: abefcd0000000000     | 	.quad 0xcdefab
0x708: abefcd0000000000     | 	.quad 0xcdefab
0x710: abefcd0000000000     | 	.quad 0xcdefab
0x718: abefcd0000000000     | 	.quad 0xcdefab
0x720: abefcd0000000000     | 	.quad 0xcdefab
0x728: abefcd0000000000     | 	.quad 0xcdefab
0x730: abefcd0000000000     | 	.quad 0xcdefab
0x738: abefcd0000000000     | 	.quad 0xcdefab
0x740: abefcd0000000000     | 	.quad 0xcdefab
0x748: abefcd0000000000     | 	.quad 0xcdefab
0x750: abefcd0000000000     | 	.quad 0xcdefab
0x758: abefcd0000000000     | 	.quad 0xcdefab
0x760: abefcd0000000000     | 	.quad 0xcdefab
0x768: abefcd0000000000     | 	.quad 0xcdefab
0x770: abefcd0000000000     | 	.quad 0xcdefab
0x778: abefcd0000000000     | 	.quad 0xcdefab
0x780: abefcd0000000000     | 	.quad 0xcdefab
0x788: abefcd0000000000     | 	.quad 0xcdefab
0x790: abefcd0000000000     | 	.quad 0xcdefab
0x798: abefcd0000000000     | 	.quad 0xcdefab
0x7a0: abefcd0000000000     | 	.quad 0xcdefab
0x7a8: abefcd0000000000     | 	.quad 0xcdefab
0x7b0:                      | Postdest:
0x7b0: bcfade0000000000     | 	.quad 0xdefabc
                            | 
0x7b8:                      | .align 8
                            | # Run time stack
0x7b8: 0000000000000000     | 	.quad 0
0x7c0: 0000000000000000     | 	.quad 0
0x7c8: 0000000000000000     | 	.quad 0
0x7d0: 0000000000000000     | 	.quad 0
0x7d8: 0000000000000000     | 	.quad 0
0x7e0: 0000000000000000     | 	.quad 0
0x7e8: 0000000000000000     | 	.quad 0
0x7f0: 0000000000000000     | 	.quad 0
0x7f8: 0000000000000000     | 	.quad 0
0x800: 0000000000000000     | 	.quad 0
0x808: 0000000000000000     | 	.quad 0
0x810: 0000000000000000     | 	.quad 0
0x818: 0000000000000000     | 	.quad 0
0x820: 0000000000000000     | 	.quad 0
0x828: 0000000000000000     | 	.quad 0
0x830: 0000000000000000     | 	.quad 0
                            | 
0x838:                      | Stack:
