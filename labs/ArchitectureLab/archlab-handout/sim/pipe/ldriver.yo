                            | #######################################################################
                            | # Test for copying block of size 63;
                            | #######################################################################
0x000:                      | 	.pos 0
0x000: 30f49808000000000000 | main:	irmovq Stack, %rsp  	# Set up stack pointer
                            | 
                            | 	# Set up arguments for copy function and then invoke it
0x00a: 30f23f00000000000000 | 	irmovq $63, %rdx		# src and dst have 63 elements
0x014: 30f61806000000000000 | 	irmovq dest, %rsi	# dst array
0x01e: 30f71004000000000000 | 	irmovq src, %rdi	# src array
0x028: 803200000000000000   | 	call ncopy		 
0x031: 00                   | 	halt			# should halt with num nonzeros in %rax
0x032:                      | StartFun:
                            | #/* $begin ncopy-ys */
                            | ##################################################################
                            | # ncopy.ys - Copy a src block of len words to dst.
                            | # Return the number of positive words (>0) contained in src.
                            | #
                            | # Include your name and ID here.
                            | #
                            | # Describe how and why you modified the baseline code.
                            | #
                            | ##################################################################
                            | # Do not modify this portion
                            | # Function prologue.
                            | # %rdi = src, %rsi = dst, %rdx = len
0x032:                      | ncopy:
                            | 
                            | ##################################################################
                            | # You can modify this portion
                            | 
                            | #	xorq 	%rax, %rax		# count = 0;
0x032: c0f2f7ffffffffffffff | 	iaddq	$-9, %rdx
0x03c: 710602000000000000   | 	jle		r_test			# len >= 10
                            | 
                            | 
0x045:                      | loop0:
0x045: 50870000000000000000 | 	mrmovq	(%rdi), %r8
0x04f: 50970800000000000000 | 	mrmovq	8(%rdi), %r9
0x059: 40860000000000000000 | 	rmmovq	%r8, (%rsi)
0x063: 6288                 | 	andq	%r8, %r8
0x065: 717800000000000000   | 	jle		loop1
0x06e: c0f00100000000000000 | 	iaddq	$1, %rax
0x078:                      | loop1:
0x078: 50871000000000000000 | 	mrmovq	16(%rdi), %r8
0x082: 40960800000000000000 | 	rmmovq	%r9, 8(%rsi)
0x08c: 6299                 | 	andq	%r9, %r9
0x08e: 71a100000000000000   | 	jle 	loop2
0x097: c0f00100000000000000 | 	iaddq	$1, %rax
0x0a1:                      | loop2:
0x0a1: 50971800000000000000 | 	mrmovq	24(%rdi), %r9
0x0ab: 40861000000000000000 | 	rmmovq	%r8, 16(%rsi)
0x0b5: 6288                 | 	andq	%r8, %r8
0x0b7: 71ca00000000000000   | 	jle 	loop3
0x0c0: c0f00100000000000000 | 	iaddq	$1, %rax
0x0ca:                      | loop3:
0x0ca: 50872000000000000000 | 	mrmovq	32(%rdi), %r8
0x0d4: 40961800000000000000 | 	rmmovq	%r9, 24(%rsi)
0x0de: 6299                 | 	andq	%r9, %r9
0x0e0: 71f300000000000000   | 	jle 	loop4
0x0e9: c0f00100000000000000 | 	iaddq	$1, %rax
0x0f3:                      | loop4:
0x0f3: 50972800000000000000 | 	mrmovq	40(%rdi), %r9
0x0fd: 40862000000000000000 | 	rmmovq	%r8, 32(%rsi)
0x107: 6288                 | 	andq	%r8, %r8
0x109: 711c01000000000000   | 	jle 	loop5
0x112: c0f00100000000000000 | 	iaddq	$1, %rax
0x11c:                      | loop5:
0x11c: 50873000000000000000 | 	mrmovq	48(%rdi), %r8
0x126: 40962800000000000000 | 	rmmovq	%r9, 40(%rsi)
0x130: 6299                 | 	andq	%r9, %r9
0x132: 714501000000000000   | 	jle 	loop6
0x13b: c0f00100000000000000 | 	iaddq	$1, %rax
0x145:                      | loop6:
0x145: 50973800000000000000 | 	mrmovq	56(%rdi), %r9
0x14f: 40863000000000000000 | 	rmmovq	%r8, 48(%rsi)
0x159: 6288                 | 	andq	%r8, %r8
0x15b: 716e01000000000000   | 	jle 	loop7
0x164: c0f00100000000000000 | 	iaddq	$1, %rax
0x16e:                      | loop7:
0x16e: 50874000000000000000 | 	mrmovq	64(%rdi), %r8
0x178: 40963800000000000000 | 	rmmovq	%r9, 56(%rsi)
0x182: 6299                 | 	andq	%r9, %r9
0x184: 719701000000000000   | 	jle 	loop8
0x18d: c0f00100000000000000 | 	iaddq	$1, %rax
0x197:                      | loop8:
0x197: 50974800000000000000 | 	mrmovq	72(%rdi), %r9
0x1a1: 40864000000000000000 | 	rmmovq	%r8, 64(%rsi)
0x1ab: 6288                 | 	andq	%r8, %r8
0x1ad: 71c001000000000000   | 	jle		loop9
0x1b6: c0f00100000000000000 | 	iaddq	$1, %rax
0x1c0:                      | loop9:
0x1c0: 40964800000000000000 | 	rmmovq	%r9, 72(%rsi)
0x1ca: 6299                 | 	andq	%r9, %r9
0x1cc: 71df01000000000000   | 	jle		loop_end
0x1d5: c0f00100000000000000 | 	iaddq	$1, %rax
                            | 
0x1df:                      | loop_end:
0x1df: c0f75000000000000000 | 	iaddq	$80, %rdi
0x1e9: c0f65000000000000000 | 	iaddq	$80, %rsi
0x1f3: c0f2f6ffffffffffffff | 	iaddq	$-10, %rdx
0x1fd: 764500000000000000   | 	jg		loop0
                            | 
0x206:                      | r_test:
0x206: c0f20600000000000000 | 	iaddq	$6, %rdx		# [-9,0] -> [-3,6]	(+3)
0x210: 722b02000000000000   | 	jl		r_test_l
0x219: 764802000000000000   | 	jg		r_test_r
0x222: 707d03000000000000   | 	jmp		r3
                            | 
0x22b:                      | r_test_l:
0x22b: c0f20200000000000000 | 	iaddq	$2, %rdx		# [-3,-1] -> [-1,1]	(+1)
0x235: 73cf03000000000000   | 	je		r1
0x23e: 76a603000000000000   | 	jg		r2
0x247: 90                   | 	ret
                            | 
0x248:                      | r_test_r:
0x248: c0f2fdffffffffffffff | 	iaddq	$-3, %rdx		# [1,6] -> [-2,3]	(+6)
0x252: 768002000000000000   | 	jg		r_test_rr
0x25b: 730203000000000000   | 	je		r6
                            | 
0x264:                      | r_test_rl:
0x264: c0f20100000000000000 | 	iaddq	$1, %rdx		# [-2,-1] -> [-1,0]	(+5)
0x26e: 725403000000000000   | 	jl		r4
0x277: 732b03000000000000   | 	je		r5
                            | 
0x280:                      | r_test_rr:
0x280: c0f2feffffffffffffff | 	iaddq	$-2, %rdx		# [1,3] -> [-1,1]	(+8)
0x28a: 72d902000000000000   | 	jl		r7
0x293: 73b002000000000000   | 	je		r8
                            | 
0x29c:                      | r9:
0x29c: 50a74000000000000000 | 	mrmovq	64(%rdi), %r10
0x2a6: 40a64000000000000000 | 	rmmovq	%r10, 64(%rsi)
0x2b0:                      | r8:
0x2b0: 62aa                 | 	andq	%r10, %r10
0x2b2: 50a73800000000000000 | 	mrmovq	56(%rdi), %r10
0x2bc: 71cf02000000000000   | 	jle		r8b				# 56(%rdi)
0x2c5: c0f00100000000000000 | 	iaddq	$1, %rax
0x2cf:                      | r8b:
0x2cf: 40a63800000000000000 | 	rmmovq	%r10, 56(%rsi)
0x2d9:                      | r7:
                            | 	# %r10 was never used before. Directly jumping to r7 means %r10 = 0.
0x2d9: 62aa                 | 	andq	%r10, %r10
0x2db: 50a73000000000000000 | 	mrmovq	48(%rdi), %r10
0x2e5: 71f802000000000000   | 	jle		r7b				# 56(%rdi)
0x2ee: c0f00100000000000000 | 	iaddq	$1, %rax
0x2f8:                      | r7b:
0x2f8: 40a63000000000000000 | 	rmmovq	%r10, 48(%rsi)
0x302:                      | r6:
0x302: 62aa                 | 	andq	%r10, %r10
0x304: 50a72800000000000000 | 	mrmovq	40(%rdi), %r10
0x30e: 712103000000000000   | 	jle		r6b
0x317: c0f00100000000000000 | 	iaddq	$1, %rax
0x321:                      | r6b:
0x321: 40a62800000000000000 | 	rmmovq	%r10, 40(%rsi)
0x32b:                      | r5:
0x32b: 62aa                 | 	andq	%r10, %r10
0x32d: 50a72000000000000000 | 	mrmovq	32(%rdi), %r10
0x337: 714a03000000000000   | 	jle		r5b
0x340: c0f00100000000000000 | 	iaddq	$1, %rax
0x34a:                      | r5b:
0x34a: 40a62000000000000000 | 	rmmovq	%r10, 32(%rsi)
0x354:                      | r4:
0x354: 62aa                 | 	andq	%r10, %r10
0x356: 50a71800000000000000 | 	mrmovq	24(%rdi), %r10
0x360: 717303000000000000   | 	jle		r4b
0x369: c0f00100000000000000 | 	iaddq	$1, %rax
0x373:                      | r4b:
0x373: 40a61800000000000000 | 	rmmovq	%r10, 24(%rsi)
0x37d:                      | r3:
0x37d: 62aa                 | 	andq	%r10, %r10
0x37f: 50a71000000000000000 | 	mrmovq	16(%rdi), %r10
0x389: 719c03000000000000   | 	jle		r3b
0x392: c0f00100000000000000 | 	iaddq	$1, %rax
0x39c:                      | r3b:
0x39c: 40a61000000000000000 | 	rmmovq	%r10, 16(%rsi)
0x3a6:                      | r2:
0x3a6: 62aa                 | 	andq	%r10, %r10
0x3a8: 50a70800000000000000 | 	mrmovq	8(%rdi), %r10
0x3b2: 71c503000000000000   | 	jle		r2b
0x3bb: c0f00100000000000000 | 	iaddq	$1, %rax
0x3c5:                      | r2b:
0x3c5: 40a60800000000000000 | 	rmmovq	%r10, 8(%rsi)
0x3cf:                      | r1:
0x3cf: 62aa                 | 	andq	%r10, %r10
0x3d1: 50a70000000000000000 | 	mrmovq	(%rdi), %r10
0x3db: 71ee03000000000000   | 	jle		r1b
0x3e4: c0f00100000000000000 | 	iaddq	$1, %rax
0x3ee:                      | r1b:
0x3ee: 40a60000000000000000 | 	rmmovq	%r10, (%rsi)
0x3f8: 62aa                 | 	andq	%r10, %r10
0x3fa: 710d04000000000000   | 	jle		Done
0x403: c0f00100000000000000 | 	iaddq	$1, %rax
                            | 
                            | ##################################################################
                            | # Do not modify the following section of code
                            | # Function epilogue.
0x40d:                      | Done:
0x40d: 90                   | 	ret
                            | ##################################################################
                            | # Keep the following label at the end of your function
0x40e:                      | End:
                            | #/* $end ncopy-ys */
0x40e:                      | EndFun:
                            | 
                            | ###############################
                            | # Source and destination blocks 
                            | ###############################
0x410:                      | 	.align 8
0x410:                      | src:
0x410: 0100000000000000     | 	.quad 1
0x418: 0200000000000000     | 	.quad 2
0x420: fdffffffffffffff     | 	.quad -3
0x428: 0400000000000000     | 	.quad 4
0x430: 0500000000000000     | 	.quad 5
0x438: faffffffffffffff     | 	.quad -6
0x440: 0700000000000000     | 	.quad 7
0x448: f8ffffffffffffff     | 	.quad -8
0x450: 0900000000000000     | 	.quad 9
0x458: f6ffffffffffffff     | 	.quad -10
0x460: f5ffffffffffffff     | 	.quad -11
0x468: 0c00000000000000     | 	.quad 12
0x470: f3ffffffffffffff     | 	.quad -13
0x478: 0e00000000000000     | 	.quad 14
0x480: f1ffffffffffffff     | 	.quad -15
0x488: f0ffffffffffffff     | 	.quad -16
0x490: efffffffffffffff     | 	.quad -17
0x498: eeffffffffffffff     | 	.quad -18
0x4a0: 1300000000000000     | 	.quad 19
0x4a8: 1400000000000000     | 	.quad 20
0x4b0: ebffffffffffffff     | 	.quad -21
0x4b8: 1600000000000000     | 	.quad 22
0x4c0: e9ffffffffffffff     | 	.quad -23
0x4c8: 1800000000000000     | 	.quad 24
0x4d0: 1900000000000000     | 	.quad 25
0x4d8: e6ffffffffffffff     | 	.quad -26
0x4e0: e5ffffffffffffff     | 	.quad -27
0x4e8: 1c00000000000000     | 	.quad 28
0x4f0: e3ffffffffffffff     | 	.quad -29
0x4f8: e2ffffffffffffff     | 	.quad -30
0x500: 1f00000000000000     | 	.quad 31
0x508: e0ffffffffffffff     | 	.quad -32
0x510: 2100000000000000     | 	.quad 33
0x518: deffffffffffffff     | 	.quad -34
0x520: 2300000000000000     | 	.quad 35
0x528: 2400000000000000     | 	.quad 36
0x530: dbffffffffffffff     | 	.quad -37
0x538: daffffffffffffff     | 	.quad -38
0x540: 2700000000000000     | 	.quad 39
0x548: 2800000000000000     | 	.quad 40
0x550: 2900000000000000     | 	.quad 41
0x558: d6ffffffffffffff     | 	.quad -42
0x560: d5ffffffffffffff     | 	.quad -43
0x568: 2c00000000000000     | 	.quad 44
0x570: 2d00000000000000     | 	.quad 45
0x578: d2ffffffffffffff     | 	.quad -46
0x580: d1ffffffffffffff     | 	.quad -47
0x588: 3000000000000000     | 	.quad 48
0x590: 3100000000000000     | 	.quad 49
0x598: ceffffffffffffff     | 	.quad -50
0x5a0: cdffffffffffffff     | 	.quad -51
0x5a8: 3400000000000000     | 	.quad 52
0x5b0: 3500000000000000     | 	.quad 53
0x5b8: caffffffffffffff     | 	.quad -54
0x5c0: c9ffffffffffffff     | 	.quad -55
0x5c8: c8ffffffffffffff     | 	.quad -56
0x5d0: c7ffffffffffffff     | 	.quad -57
0x5d8: 3a00000000000000     | 	.quad 58
0x5e0: 3b00000000000000     | 	.quad 59
0x5e8: c4ffffffffffffff     | 	.quad -60
0x5f0: 3d00000000000000     | 	.quad 61
0x5f8: c2ffffffffffffff     | 	.quad -62
0x600: 3f00000000000000     | 	.quad 63
0x608: fadebc0000000000     | 	.quad 0xbcdefa # This shouldn't get moved
                            | 
0x610:                      | 	.align 16
0x610:                      | Predest:
0x610: fadebc0000000000     | 	.quad 0xbcdefa
0x618:                      | dest:
0x618: abefcd0000000000     | 	.quad 0xcdefab
0x620: abefcd0000000000     | 	.quad 0xcdefab
0x628: abefcd0000000000     | 	.quad 0xcdefab
0x630: abefcd0000000000     | 	.quad 0xcdefab
0x638: abefcd0000000000     | 	.quad 0xcdefab
0x640: abefcd0000000000     | 	.quad 0xcdefab
0x648: abefcd0000000000     | 	.quad 0xcdefab
0x650: abefcd0000000000     | 	.quad 0xcdefab
0x658: abefcd0000000000     | 	.quad 0xcdefab
0x660: abefcd0000000000     | 	.quad 0xcdefab
0x668: abefcd0000000000     | 	.quad 0xcdefab
0x670: abefcd0000000000     | 	.quad 0xcdefab
0x678: abefcd0000000000     | 	.quad 0xcdefab
0x680: abefcd0000000000     | 	.quad 0xcdefab
0x688: abefcd0000000000     | 	.quad 0xcdefab
0x690: abefcd0000000000     | 	.quad 0xcdefab
0x698: abefcd0000000000     | 	.quad 0xcdefab
0x6a0: abefcd0000000000     | 	.quad 0xcdefab
0x6a8: abefcd0000000000     | 	.quad 0xcdefab
0x6b0: abefcd0000000000     | 	.quad 0xcdefab
0x6b8: abefcd0000000000     | 	.quad 0xcdefab
0x6c0: abefcd0000000000     | 	.quad 0xcdefab
0x6c8: abefcd0000000000     | 	.quad 0xcdefab
0x6d0: abefcd0000000000     | 	.quad 0xcdefab
0x6d8: abefcd0000000000     | 	.quad 0xcdefab
0x6e0: abefcd0000000000     | 	.quad 0xcdefab
0x6e8: abefcd0000000000     | 	.quad 0xcdefab
0x6f0: abefcd0000000000     | 	.quad 0xcdefab
0x6f8: abefcd0000000000     | 	.quad 0xcdefab
0x700: abefcd0000000000     | 	.quad 0xcdefab
0x708: abefcd0000000000     | 	.quad 0xcdefab
0x710: abefcd0000000000     | 	.quad 0xcdefab
0x718: abefcd0000000000     | 	.quad 0xcdefab
0x720: abefcd0000000000     | 	.quad 0xcdefab
0x728: abefcd0000000000     | 	.quad 0xcdefab
0x730: abefcd0000000000     | 	.quad 0xcdefab
0x738: abefcd0000000000     | 	.quad 0xcdefab
0x740: abefcd0000000000     | 	.quad 0xcdefab
0x748: abefcd0000000000     | 	.quad 0xcdefab
0x750: abefcd0000000000     | 	.quad 0xcdefab
0x758: abefcd0000000000     | 	.quad 0xcdefab
0x760: abefcd0000000000     | 	.quad 0xcdefab
0x768: abefcd0000000000     | 	.quad 0xcdefab
0x770: abefcd0000000000     | 	.quad 0xcdefab
0x778: abefcd0000000000     | 	.quad 0xcdefab
0x780: abefcd0000000000     | 	.quad 0xcdefab
0x788: abefcd0000000000     | 	.quad 0xcdefab
0x790: abefcd0000000000     | 	.quad 0xcdefab
0x798: abefcd0000000000     | 	.quad 0xcdefab
0x7a0: abefcd0000000000     | 	.quad 0xcdefab
0x7a8: abefcd0000000000     | 	.quad 0xcdefab
0x7b0: abefcd0000000000     | 	.quad 0xcdefab
0x7b8: abefcd0000000000     | 	.quad 0xcdefab
0x7c0: abefcd0000000000     | 	.quad 0xcdefab
0x7c8: abefcd0000000000     | 	.quad 0xcdefab
0x7d0: abefcd0000000000     | 	.quad 0xcdefab
0x7d8: abefcd0000000000     | 	.quad 0xcdefab
0x7e0: abefcd0000000000     | 	.quad 0xcdefab
0x7e8: abefcd0000000000     | 	.quad 0xcdefab
0x7f0: abefcd0000000000     | 	.quad 0xcdefab
0x7f8: abefcd0000000000     | 	.quad 0xcdefab
0x800: abefcd0000000000     | 	.quad 0xcdefab
0x808: abefcd0000000000     | 	.quad 0xcdefab
0x810:                      | Postdest:
0x810: bcfade0000000000     | 	.quad 0xdefabc
                            | 
0x818:                      | .align 8
                            | # Run time stack
0x818: 0000000000000000     | 	.quad 0
0x820: 0000000000000000     | 	.quad 0
0x828: 0000000000000000     | 	.quad 0
0x830: 0000000000000000     | 	.quad 0
0x838: 0000000000000000     | 	.quad 0
0x840: 0000000000000000     | 	.quad 0
0x848: 0000000000000000     | 	.quad 0
0x850: 0000000000000000     | 	.quad 0
0x858: 0000000000000000     | 	.quad 0
0x860: 0000000000000000     | 	.quad 0
0x868: 0000000000000000     | 	.quad 0
0x870: 0000000000000000     | 	.quad 0
0x878: 0000000000000000     | 	.quad 0
0x880: 0000000000000000     | 	.quad 0
0x888: 0000000000000000     | 	.quad 0
0x890: 0000000000000000     | 	.quad 0
                            | 
0x898:                      | Stack:
