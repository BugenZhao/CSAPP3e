                            | #######################################################################
                            | # Test for copying block of size 63;
                            | #######################################################################
0x000:                      | 	.pos 0
0x000: 30f46806000000000000 | main:	irmovq Stack, %rsp  	# Set up stack pointer
                            | 
                            | 	# Set up arguments for copy function and then invoke it
0x00a: 30f23f00000000000000 | 	irmovq $63, %rdx		# src and dst have 63 elements
0x014: 30f6e803000000000000 | 	irmovq dest, %rsi	# dst array
0x01e: 30f7d801000000000000 | 	irmovq src, %rdi	# src array
0x028: 803200000000000000   | 	call ncopy		 
0x031: 00                   | 	halt			# should halt with num nonzeros in %rax
0x032:                      | StartFun:
                            | #/* $begin ncopy-ys */
                            | ##################################################################
                            | # ncopy.ys - Copy a src block of len words to dst.
                            | # Return the number of positive words (>0) contained in src.
                            | #
                            | # Include your name and ID here.
                            | #
                            | # Describe how and why you modified the baseline code.
                            | #
                            | ##################################################################
                            | # Do not modify this portion
                            | # Function prologue.
                            | # %rdi = src, %rsi = dst, %rdx = len
0x032:                      | ncopy:
                            | 
                            | ##################################################################
                            | # You can modify this portion
                            | 
                            | #	xorq 	%rax, %rax		# count = 0;
0x032: c0f2fdffffffffffffff | 	iaddq	$-3, %rdx
0x03c: 76fd00000000000000   | 	jg		loop0			# len >= 2
0x045:                      | test_rest:
0x045: c0f20300000000000000 | 	iaddq	$3, %rdx
0x04f: 765900000000000000   | 	jg		rest0
0x058: 90                   | 	ret
0x059:                      | rest0:
0x059: 50870000000000000000 | 	mrmovq	(%rdi), %r8
0x063: 50970800000000000000 | 	mrmovq	8(%rdi), %r9
0x06d: 40860000000000000000 | 	rmmovq	%r8, (%rsi)
0x077: 6288                 | 	andq	%r8, %r8
0x079: 718c00000000000000   | 	jle		rest0_t
0x082: c0f00100000000000000 | 	iaddq	$1, %rax
0x08c:                      | rest0_t:
0x08c: c0f2ffffffffffffffff | 	iaddq	$-1, %rdx
0x096: 76a000000000000000   | 	jg		rest1
0x09f: 90                   | 	ret
0x0a0:                      | rest1:
0x0a0: 50a71000000000000000 | 	mrmovq	16(%rdi), %r10
0x0aa: 40960800000000000000 | 	rmmovq	%r9, 8(%rsi)
0x0b4: 6299                 | 	andq	%r9, %r9
0x0b6: 71c900000000000000   | 	jle		rest1_t
0x0bf: c0f00100000000000000 | 	iaddq	$1, %rax
0x0c9:                      | rest1_t:
0x0c9: c0f2ffffffffffffffff | 	iaddq	$-1, %rdx
0x0d3: 76dd00000000000000   | 	jg 		rest2
0x0dc: 90                   | 	ret
0x0dd:                      | rest2:
0x0dd: 40a61000000000000000 | 	rmmovq	%r10, 16(%rsi)
0x0e7: 62aa                 | 	andq	%r10, %r10
0x0e9: 71d101000000000000   | 	jle		Done
0x0f2: c0f00100000000000000 | 	iaddq	$1, %rax
0x0fc: 90                   | 	ret
                            | 
                            | 
0x0fd:                      | loop0:
0x0fd: 50870000000000000000 | 	mrmovq	(%rdi), %r8
0x107: c0f72000000000000000 | 	iaddq	$32, %rdi
0x111: 40860000000000000000 | 	rmmovq	%r8, (%rsi)
0x11b: 6288                 | 	andq	%r8, %r8
0x11d: 713001000000000000   | 	jle		loop1
0x126: c0f00100000000000000 | 	iaddq	$1, %rax
0x130:                      | loop1:
0x130: 5087e8ffffffffffffff | 	mrmovq	-24(%rdi), %r8
0x13a: c0f62000000000000000 | 	iaddq	$32, %rsi
0x144: 4086e8ffffffffffffff | 	rmmovq	%r8, -24(%rsi)
0x14e: 6288                 | 	andq	%r8, %r8
0x150: 716301000000000000   | 	jle 	loop2
0x159: c0f00100000000000000 | 	iaddq	$1, %rax
0x163:                      | loop2:
0x163: 5087f0ffffffffffffff | 	mrmovq	-16(%rdi), %r8
0x16d: 5097f8ffffffffffffff | 	mrmovq	-8(%rdi), %r9
0x177: 4086f0ffffffffffffff | 	rmmovq	%r8, -16(%rsi)
0x181: 6288                 | 	andq	%r8, %r8
0x183: 719601000000000000   | 	jle 	loop3
0x18c: c0f00100000000000000 | 	iaddq	$1, %rax
0x196:                      | loop3:
0x196: 4096f8ffffffffffffff | 	rmmovq	%r9, -8(%rsi)
0x1a0: 6299                 | 	andq	%r9, %r9
0x1a2: 71b501000000000000   | 	jle		loop_end
0x1ab: c0f00100000000000000 | 	iaddq	$1, %rax
                            | 
0x1b5:                      | loop_end:
0x1b5: c0f2fcffffffffffffff | 	iaddq	$-4, %rdx
0x1bf: 76fd00000000000000   | 	jg		loop0
0x1c8: 704500000000000000   | 	jmp		test_rest
                            | 
                            | 
                            | ##################################################################
                            | # Do not modify the following section of code
                            | # Function epilogue.
0x1d1:                      | Done:
0x1d1: 90                   | 	ret
                            | ##################################################################
                            | # Keep the following label at the end of your function
0x1d2:                      | End:
                            | #/* $end ncopy-ys */
0x1d2:                      | EndFun:
                            | 
                            | ###############################
                            | # Source and destination blocks 
                            | ###############################
0x1d8:                      | 	.align 8
0x1d8:                      | src:
0x1d8: 0100000000000000     | 	.quad 1
0x1e0: 0200000000000000     | 	.quad 2
0x1e8: fdffffffffffffff     | 	.quad -3
0x1f0: 0400000000000000     | 	.quad 4
0x1f8: fbffffffffffffff     | 	.quad -5
0x200: faffffffffffffff     | 	.quad -6
0x208: 0700000000000000     | 	.quad 7
0x210: f8ffffffffffffff     | 	.quad -8
0x218: 0900000000000000     | 	.quad 9
0x220: f6ffffffffffffff     | 	.quad -10
0x228: f5ffffffffffffff     | 	.quad -11
0x230: f4ffffffffffffff     | 	.quad -12
0x238: 0d00000000000000     | 	.quad 13
0x240: 0e00000000000000     | 	.quad 14
0x248: f1ffffffffffffff     | 	.quad -15
0x250: f0ffffffffffffff     | 	.quad -16
0x258: efffffffffffffff     | 	.quad -17
0x260: 1200000000000000     | 	.quad 18
0x268: edffffffffffffff     | 	.quad -19
0x270: ecffffffffffffff     | 	.quad -20
0x278: ebffffffffffffff     | 	.quad -21
0x280: 1600000000000000     | 	.quad 22
0x288: 1700000000000000     | 	.quad 23
0x290: 1800000000000000     | 	.quad 24
0x298: 1900000000000000     | 	.quad 25
0x2a0: 1a00000000000000     | 	.quad 26
0x2a8: 1b00000000000000     | 	.quad 27
0x2b0: e4ffffffffffffff     | 	.quad -28
0x2b8: 1d00000000000000     | 	.quad 29
0x2c0: e2ffffffffffffff     | 	.quad -30
0x2c8: 1f00000000000000     | 	.quad 31
0x2d0: e0ffffffffffffff     | 	.quad -32
0x2d8: dfffffffffffffff     | 	.quad -33
0x2e0: deffffffffffffff     | 	.quad -34
0x2e8: ddffffffffffffff     | 	.quad -35
0x2f0: 2400000000000000     | 	.quad 36
0x2f8: 2500000000000000     | 	.quad 37
0x300: daffffffffffffff     | 	.quad -38
0x308: d9ffffffffffffff     | 	.quad -39
0x310: d8ffffffffffffff     | 	.quad -40
0x318: d7ffffffffffffff     | 	.quad -41
0x320: 2a00000000000000     | 	.quad 42
0x328: 2b00000000000000     | 	.quad 43
0x330: d4ffffffffffffff     | 	.quad -44
0x338: 2d00000000000000     | 	.quad 45
0x340: d2ffffffffffffff     | 	.quad -46
0x348: d1ffffffffffffff     | 	.quad -47
0x350: d0ffffffffffffff     | 	.quad -48
0x358: 3100000000000000     | 	.quad 49
0x360: 3200000000000000     | 	.quad 50
0x368: 3300000000000000     | 	.quad 51
0x370: ccffffffffffffff     | 	.quad -52
0x378: cbffffffffffffff     | 	.quad -53
0x380: caffffffffffffff     | 	.quad -54
0x388: 3700000000000000     | 	.quad 55
0x390: c8ffffffffffffff     | 	.quad -56
0x398: 3900000000000000     | 	.quad 57
0x3a0: 3a00000000000000     | 	.quad 58
0x3a8: c5ffffffffffffff     | 	.quad -59
0x3b0: 3c00000000000000     | 	.quad 60
0x3b8: 3d00000000000000     | 	.quad 61
0x3c0: 3e00000000000000     | 	.quad 62
0x3c8: 3f00000000000000     | 	.quad 63
0x3d0: fadebc0000000000     | 	.quad 0xbcdefa # This shouldn't get moved
                            | 
0x3e0:                      | 	.align 16
0x3e0:                      | Predest:
0x3e0: fadebc0000000000     | 	.quad 0xbcdefa
0x3e8:                      | dest:
0x3e8: abefcd0000000000     | 	.quad 0xcdefab
0x3f0: abefcd0000000000     | 	.quad 0xcdefab
0x3f8: abefcd0000000000     | 	.quad 0xcdefab
0x400: abefcd0000000000     | 	.quad 0xcdefab
0x408: abefcd0000000000     | 	.quad 0xcdefab
0x410: abefcd0000000000     | 	.quad 0xcdefab
0x418: abefcd0000000000     | 	.quad 0xcdefab
0x420: abefcd0000000000     | 	.quad 0xcdefab
0x428: abefcd0000000000     | 	.quad 0xcdefab
0x430: abefcd0000000000     | 	.quad 0xcdefab
0x438: abefcd0000000000     | 	.quad 0xcdefab
0x440: abefcd0000000000     | 	.quad 0xcdefab
0x448: abefcd0000000000     | 	.quad 0xcdefab
0x450: abefcd0000000000     | 	.quad 0xcdefab
0x458: abefcd0000000000     | 	.quad 0xcdefab
0x460: abefcd0000000000     | 	.quad 0xcdefab
0x468: abefcd0000000000     | 	.quad 0xcdefab
0x470: abefcd0000000000     | 	.quad 0xcdefab
0x478: abefcd0000000000     | 	.quad 0xcdefab
0x480: abefcd0000000000     | 	.quad 0xcdefab
0x488: abefcd0000000000     | 	.quad 0xcdefab
0x490: abefcd0000000000     | 	.quad 0xcdefab
0x498: abefcd0000000000     | 	.quad 0xcdefab
0x4a0: abefcd0000000000     | 	.quad 0xcdefab
0x4a8: abefcd0000000000     | 	.quad 0xcdefab
0x4b0: abefcd0000000000     | 	.quad 0xcdefab
0x4b8: abefcd0000000000     | 	.quad 0xcdefab
0x4c0: abefcd0000000000     | 	.quad 0xcdefab
0x4c8: abefcd0000000000     | 	.quad 0xcdefab
0x4d0: abefcd0000000000     | 	.quad 0xcdefab
0x4d8: abefcd0000000000     | 	.quad 0xcdefab
0x4e0: abefcd0000000000     | 	.quad 0xcdefab
0x4e8: abefcd0000000000     | 	.quad 0xcdefab
0x4f0: abefcd0000000000     | 	.quad 0xcdefab
0x4f8: abefcd0000000000     | 	.quad 0xcdefab
0x500: abefcd0000000000     | 	.quad 0xcdefab
0x508: abefcd0000000000     | 	.quad 0xcdefab
0x510: abefcd0000000000     | 	.quad 0xcdefab
0x518: abefcd0000000000     | 	.quad 0xcdefab
0x520: abefcd0000000000     | 	.quad 0xcdefab
0x528: abefcd0000000000     | 	.quad 0xcdefab
0x530: abefcd0000000000     | 	.quad 0xcdefab
0x538: abefcd0000000000     | 	.quad 0xcdefab
0x540: abefcd0000000000     | 	.quad 0xcdefab
0x548: abefcd0000000000     | 	.quad 0xcdefab
0x550: abefcd0000000000     | 	.quad 0xcdefab
0x558: abefcd0000000000     | 	.quad 0xcdefab
0x560: abefcd0000000000     | 	.quad 0xcdefab
0x568: abefcd0000000000     | 	.quad 0xcdefab
0x570: abefcd0000000000     | 	.quad 0xcdefab
0x578: abefcd0000000000     | 	.quad 0xcdefab
0x580: abefcd0000000000     | 	.quad 0xcdefab
0x588: abefcd0000000000     | 	.quad 0xcdefab
0x590: abefcd0000000000     | 	.quad 0xcdefab
0x598: abefcd0000000000     | 	.quad 0xcdefab
0x5a0: abefcd0000000000     | 	.quad 0xcdefab
0x5a8: abefcd0000000000     | 	.quad 0xcdefab
0x5b0: abefcd0000000000     | 	.quad 0xcdefab
0x5b8: abefcd0000000000     | 	.quad 0xcdefab
0x5c0: abefcd0000000000     | 	.quad 0xcdefab
0x5c8: abefcd0000000000     | 	.quad 0xcdefab
0x5d0: abefcd0000000000     | 	.quad 0xcdefab
0x5d8: abefcd0000000000     | 	.quad 0xcdefab
0x5e0:                      | Postdest:
0x5e0: bcfade0000000000     | 	.quad 0xdefabc
                            | 
0x5e8:                      | .align 8
                            | # Run time stack
0x5e8: 0000000000000000     | 	.quad 0
0x5f0: 0000000000000000     | 	.quad 0
0x5f8: 0000000000000000     | 	.quad 0
0x600: 0000000000000000     | 	.quad 0
0x608: 0000000000000000     | 	.quad 0
0x610: 0000000000000000     | 	.quad 0
0x618: 0000000000000000     | 	.quad 0
0x620: 0000000000000000     | 	.quad 0
0x628: 0000000000000000     | 	.quad 0
0x630: 0000000000000000     | 	.quad 0
0x638: 0000000000000000     | 	.quad 0
0x640: 0000000000000000     | 	.quad 0
0x648: 0000000000000000     | 	.quad 0
0x650: 0000000000000000     | 	.quad 0
0x658: 0000000000000000     | 	.quad 0
0x660: 0000000000000000     | 	.quad 0
                            | 
0x668:                      | Stack:
