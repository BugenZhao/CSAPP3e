#/* $begin ncopy-ys */
##################################################################
# ncopy.ys - Copy a src block of len words to dst.
# Return the number of positive words (>0) contained in src.
#
# Include your name and ID here.
#
# Describe how and why you modified the baseline code.
#
##################################################################
# Do not modify this portion
# Function prologue.
# %rdi = src, %rsi = dst, %rdx = len
ncopy:

##################################################################
# You can modify this portion

#	xorq 	%rax, %rax		# count = 0;
	iaddq	$-9, %rdx
	jle		r_test			# len >= 10


loop0:
	mrmovq	(%rdi), %r8
	mrmovq	8(%rdi), %r9
	rmmovq	%r8, (%rsi)
	andq	%r8, %r8
	jle		loop1
	iaddq	$1, %rax
loop1:
	mrmovq	16(%rdi), %r8
	rmmovq	%r9, 8(%rsi)
	andq	%r9, %r9
	jle 	loop2
	iaddq	$1, %rax
loop2:
	mrmovq	24(%rdi), %r9
	rmmovq	%r8, 16(%rsi)
	andq	%r8, %r8
	jle 	loop3
	iaddq	$1, %rax
loop3:
	mrmovq	32(%rdi), %r8
	rmmovq	%r9, 24(%rsi)
	andq	%r9, %r9
	jle 	loop4
	iaddq	$1, %rax
loop4:
	mrmovq	40(%rdi), %r9
	rmmovq	%r8, 32(%rsi)
	andq	%r8, %r8
	jle 	loop5
	iaddq	$1, %rax
loop5:
	mrmovq	48(%rdi), %r8
	rmmovq	%r9, 40(%rsi)
	andq	%r9, %r9
	jle 	loop6
	iaddq	$1, %rax
loop6:
	mrmovq	56(%rdi), %r9
	rmmovq	%r8, 48(%rsi)
	andq	%r8, %r8
	jle 	loop7
	iaddq	$1, %rax
loop7:
	mrmovq	64(%rdi), %r8
	rmmovq	%r9, 56(%rsi)
	andq	%r9, %r9
	jle 	loop8
	iaddq	$1, %rax
loop8:
	mrmovq	72(%rdi), %r9
	rmmovq	%r8, 64(%rsi)
	andq	%r8, %r8
	jle		loop9
	iaddq	$1, %rax
loop9:
	rmmovq	%r9, 72(%rsi)
	andq	%r9, %r9
	jle		loop_end
	iaddq	$1, %rax

loop_end:
	iaddq	$80, %rdi
	iaddq	$80, %rsi
	iaddq	$-10, %rdx
	jg		loop0

r_test:
	iaddq	$6, %rdx		# [-9,0] -> [-3,6]	(+3)
	jl		r_test_l
	jg		r_test_r
	jmp		r3

r_test_l:
	iaddq	$2, %rdx		# [-3,-1] -> [-1,1]	(+1)
	je		r1
	jg		r2
	ret

r_test_r:
	iaddq	$-3, %rdx		# [1,6] -> [-2,3]	(+6)
	jg		r_test_rr
	je		r6

r_test_rl:
	iaddq	$1, %rdx		# [-2,-1] -> [-1,0]	(+5)
	jl		r4
	je		r5

r_test_rr:
	iaddq	$-2, %rdx		# [1,3] -> [-1,1]	(+8)
	jl		r7
	je		r8

r9:
	mrmovq	64(%rdi), %r10
	rmmovq	%r10, 64(%rsi)
r8:
	# %r10 was never used before. Directly jumping to r7 means %r10 = 0.
	andq	%r10, %r10
	mrmovq	56(%rdi), %r10
	jle		r8b				# 64(%rdi) <- PREVIOUS ELEMENT
	iaddq	$1, %rax
r8b:
	rmmovq	%r10, 56(%rsi)
r7:
	andq	%r10, %r10
	mrmovq	48(%rdi), %r10
	jle		r7b
	iaddq	$1, %rax
r7b:
	rmmovq	%r10, 48(%rsi)
r6:
	andq	%r10, %r10
	mrmovq	40(%rdi), %r10
	jle		r6b
	iaddq	$1, %rax
r6b:
	rmmovq	%r10, 40(%rsi)
r5:
	andq	%r10, %r10
	mrmovq	32(%rdi), %r10
	jle		r5b
	iaddq	$1, %rax
r5b:
	rmmovq	%r10, 32(%rsi)
r4:
	andq	%r10, %r10
	mrmovq	24(%rdi), %r10
	jle		r4b
	iaddq	$1, %rax
r4b:
	rmmovq	%r10, 24(%rsi)
r3:
	andq	%r10, %r10
	mrmovq	16(%rdi), %r10
	jle		r3b
	iaddq	$1, %rax
r3b:
	rmmovq	%r10, 16(%rsi)
r2:
	andq	%r10, %r10
	mrmovq	8(%rdi), %r10
	jle		r2b
	iaddq	$1, %rax
r2b:
	rmmovq	%r10, 8(%rsi)
r1:
	andq	%r10, %r10
	mrmovq	(%rdi), %r10
	jle		r1b
	iaddq	$1, %rax
r1b:
	rmmovq	%r10, (%rsi)
	andq	%r10, %r10
	jle		Done
	iaddq	$1, %rax

##################################################################
# Do not modify the following section of code
# Function epilogue.
Done:
	ret
##################################################################
# Keep the following label at the end of your function
End:
#/* $end ncopy-ys */
